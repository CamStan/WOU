#BlueJ class context
comment0.params=
comment0.target=Book()
comment0.text=\r\n\ Default\ contstructor\ that\ creates\ a\ new\ Book\ project\ with\ all\ empty\ fields.\r\n
comment1.params=totalCount\ totalTime
comment1.target=Book(long,\ long)
comment1.text=\r\n\ Non-default\ constructor\ that\ creates\ a\ new\ book\ Project\ with\ the\ input\ amount\ of\ total\r\n\ word\ cound\ and\ total\ time\ already\ spent\ on\ the\ project.\r\n\ @param\ totalCount\ The\ total\ word\ count\ already\ put\ into\ the\ project.\r\n\ @param\ totalTime\ The\ total\ amount\ of\ time\ (in\ minutes)\ already\ spent\ on\ the\ project\r\n
comment10.params=
comment10.target=int\ numberOfEntries()
comment10.text=\r\n\ Gets\ the\ number\ of\ Entry\ sessions\ made\ on\ this\ project.\r\n\ @return\ The\ number\ of\ entries.\r\n
comment11.params=entry
comment11.target=void\ addEntry(Entry)
comment11.text=\r\n\ Adds\ an\ entry\ to\ the\ collection\ of\ entries\ and\ adds\ its\ time\ and\ count\ to\ the\ totals.\r\n\ @param\ entry\ The\ Entry\ to\ add.\r\n
comment12.params=
comment12.target=java.util.List\ getEntries()
comment12.text=\r\n\ Gets\ the\ collections\ of\ entries.\r\n\ @return\ The\ collection\ of\ entries.\r\n
comment13.params=entry\ newCount
comment13.target=void\ editEntryCount(int,\ int)
comment13.text=\r\n\ Change\ an\ incorrect\ word\ count\ within\ a\ specific\ Entry.\r\n\ @param\ entry\ The\ number\ of\ the\ entry\ to\ edit.\r\n\ @param\ newCount\ The\ correct\ word\ count.\r\n
comment14.params=entry\ newTime
comment14.target=void\ editEntryTime(int,\ int)
comment14.text=\r\n\ Change\ an\ incorrect\ time\ spent\ within\ a\ specific\ Entry.\r\n\ @param\ entry\ The\ number\ of\ the\ entry\ to\ edit.\r\n\ @param\ newTime\ The\ correct\ time\ (in\ minutes).\r\n
comment15.params=entry\ year\ month\ day
comment15.target=void\ editEntryDate(int,\ int,\ int,\ int)
comment15.text=\r\n\ Change\ an\ incorrect\ date\ within\ a\ specific\ Entry.\r\n\ @param\ entry\ The\ number\ of\ the\ entry\ to\ edit.\r\n\ @param\ year\ The\ correct\ year.\r\n\ @param\ month\ The\ correct\ month.\r\n\ @param\ day\ The\ correct\ day.\r\n
comment16.params=
comment16.target=void\ sortEntries_byDate()
comment16.text=\r\n\ Sorts\ the\ collection\ of\ entries\ sequentially\ by\ date.\r\n
comment17.params=days
comment17.target=long\ averageCount(int)
comment17.text=\r\n\ Gets\ the\ average\ word\ count\ between\ today\ and\ the\ input\ number\ of\ days\ in\ the\ past.\r\n\ @param\ days\ The\ number\ of\ days\ in\ the\ past.\r\n\ @return\ The\ average\ word\ count.\r\n
comment18.params=days
comment18.target=long\ averageTime(int)
comment18.text=\r\n\ Gets\ the\ average\ time\ spent\ between\ today\ and\ the\ input\ number\ of\ days\ in\ the\ past.\r\n\ @param\ days\ The\ number\ of\ days\ in\ the\ past.\r\n\ @return\ The\ average\ time\ spent.\r\n
comment19.params=year1\ month1\ day1\ year2\ month2\ day2
comment19.target=long\ averageCount(int,\ int,\ int,\ int,\ int,\ int)
comment19.text=\r\n\ Gets\ the\ average\ word\ count\ between\ two\ set\ days.\r\n\ @param\ year1\ The\ year\ of\ the\ start\ date.\r\n\ @param\ month1\ The\ month\ of\ the\ start\ date.\r\n\ @param\ day1\ The\ day\ of\ the\ start\ date.\r\n\ @param\ year2\ The\ year\ of\ the\ end\ date.\r\n\ @param\ month2\ The\ year\ of\ the\ end\ date.\r\n\ @param\ day2\ The\ day\ of\ the\ end\ date.\r\n\ @return\ The\ average\ word\ count.\r\n
comment2.params=
comment2.target=long\ getTotalCount()
comment2.text=\r\n\ Gets\ the\ total\ count\ of\ words\ in\ this\ book.\r\n\ @return\ The\ total\ count\ for\ this\ book.\r\n
comment20.params=year1\ month1\ day1\ year2\ month2\ day2
comment20.target=long\ averageTime(int,\ int,\ int,\ int,\ int,\ int)
comment20.text=\r\n\ Gets\ the\ average\ time\ spent\ between\ two\ set\ days.\r\n\ @param\ year1\ The\ year\ of\ the\ start\ date.\r\n\ @param\ month1\ The\ month\ of\ the\ start\ date.\r\n\ @param\ day1\ The\ day\ of\ the\ start\ date.\r\n\ @param\ year2\ The\ year\ of\ the\ end\ date.\r\n\ @param\ month2\ The\ year\ of\ the\ end\ date.\r\n\ @param\ day2\ The\ day\ of\ the\ end\ date.\r\n\ @return\ The\ average\ time\ spent.\r\n
comment21.params=days
comment21.target=java.util.Calendar\ getPastDate(int)
comment21.text=\r\n\ Private\ method\r\n\ Gets\ the\ date\ of\ the\ day\ that\ is\ the\ input\ number\ of\ days\ before\ today.\r\n\ @param\ days\ The\ number\ of\ days\ in\ the\ past.\r\n\ @return\ The\ date.\r\n
comment22.params=year\ month\ day
comment22.target=java.util.Calendar\ getCalendar(int,\ int,\ int)
comment22.text=\r\n\ Gets\ the\ Calendar\ date\ and\ time\ of\ the\ input\ day.\r\n\ @param\ year\ The\ year\ to\ set\ the\ date\ to.\r\n\ @param\ month\ The\ month\ to\ set\ the\ date\ to.\r\n\ @param\ day\ The\ day\ to\ set\ the\ date\ to.\r\n\ @return\ The\ Calendar\ date.\r\n
comment23.params=day1\ day2
comment23.target=int\ numberOfDays(java.util.Calendar,\ java.util.Calendar)
comment23.text=\r\n\ Private\ method\r\n\ Determines\ the\ number\ of\ days\ between\ two\ dates.\r\n\ @param\ day1\ The\ earlier\ date.\r\n\ @param\ day2\ The\ later\ date.\r\n\ @return\ The\ number\ of\ days.\r\n
comment24.params=period
comment24.target=int\ getEntry_withDate(java.util.Calendar)
comment24.text=\r\n\ Private\ method\r\n\ Starts\ at\ beginning\ of\ list.\r\n\ Gets\ the\ index\ number\ from\ the\ list\ entries\ of\ the\ entry\ with\ the\ input\ date\ or\ the\ entry\r\n\ with\ the\ NEXT\ available\ date.\r\n\ @param\ period\ The\ date\ to\ find.\r\n\ @return\ The\ index\ number.\r\n
comment25.params=period
comment25.target=int\ getEntry_withDate2(java.util.Calendar)
comment25.text=\r\n\ Private\ method\r\n\ Starts\ at\ end\ of\ list.\r\n\ Gets\ the\ index\ number\ from\ the\ list\ of\ entries\ of\ the\ entry\ with\ the\ input\ date\ or\ the\ entry\r\n\ with\ the\ first\ PREVIOUS\ date.\r\n\ @param\ period\ The\ date\ to\ find.\r\n\ @return\ The\ index\ number.\r\n
comment26.params=day1\ day2
comment26.target=boolean\ isSameDay(java.util.Calendar,\ java.util.Calendar)
comment26.text=\r\n\ Private\ method\r\n\ Checks\ to\ see\ if\ two\ days\ are\ the\ same\ day.\r\n\ @param\ day1\ The\ first\ day\ to\ compare.\r\n\ @param\ day2\ The\ second\ day\ to\ compare.\r\n\ @return\ If\ they\ are\ the\ same\ day.\r\n
comment27.params=arrayNumber
comment27.target=long\ countAdder(int)
comment27.text=\r\n\ Private\ method\r\n\ Adds\ the\ word\ count\ of\ each\ entry\ starting\ at\ the\ input\ index\ to\ the\ end\ of\ the\ list.\r\n\ @param\ arrayNumber\ The\ index\ to\ start\ at.\r\n\ @return\ The\ total\ word\ count.\r\n
comment28.params=arrayNumber
comment28.target=long\ timeAdder(int)
comment28.text=\r\n\ Private\ method\r\n\ Adds\ the\ time\ spent\ of\ each\ entry\ starting\ at\ the\ input\ index\ to\ the\ end\ of\ the\ list.\r\n\ @param\ arrayNumber\ The\ index\ to\ start\ at.\r\n\ @return\ The\ total\ time\ spent.\r\n
comment29.params=startIndex\ endIndex
comment29.target=long\ countAdder(int,\ int)
comment29.text=\r\n\ Private\ method\r\n\ Adds\ the\ word\ count\ of\ each\ entry\ between\ two\ index\ points\ in\ the\ list.\r\n\ @param\ startIndex\ The\ index\ of\ the\ array\ to\ start\ at.\r\n\ @param\ endIndex\ The\ index\ of\ the\ array\ to\ end\ at.\r\n\ @return\ The\ total\ word\ count.\r\n
comment3.params=newTotal
comment3.target=void\ setTotalCount(long)
comment3.text=\r\n\ Sets\ the\ total\ count\ of\ words\ in\ this\ book.\r\n\ @param\ newTotal\ The\ total\ count\ in\ this\ book.\r\n
comment30.params=startIndex\ endIndex
comment30.target=long\ timeAdder(int,\ int)
comment30.text=\r\n\ Private\ method\r\n\ Adds\ the\ time\ spent\ on\ each\ entry\ between\ two\ index\ points\ in\ the\ list.\r\n\ @param\ startIndex\ The\ index\ of\ the\ array\ to\ start\ at.\r\n\ @param\ endIndex\ The\ index\ of\ the\ array\ to\ end\ at.\r\n\ @return\ The\ total\ time\ spent.\r\n
comment31.params=
comment31.target=java.lang.String\ getTitle()
comment31.text=\r\n\ Gets\ the\ title\ of\ the\ Book\r\n\ @return\ The\ title\ of\ the\ book.\r\n
comment32.params=
comment32.target=java.lang.String\ getGenre()
comment32.text=\r\n\ Gets\ the\ genre\ of\ the\ Book\r\n\ @return\ The\ genre\ of\ the\ book\r\n
comment33.params=
comment33.target=java.lang.String\ toString()
comment33.text=\r\n\ The\ toString\ for\ Book.\r\n\ @return\ The\ toString\ for\ this\ class.\r\n
comment4.params=count
comment4.target=void\ incrementTotalCount(int)
comment4.text=\r\n\ Adds\ more\ words\ to\ the\ total\ word\ count.\r\n\ @param\ count\ The\ amount\ of\ words\ to\ add\ to\ the\ total.\r\n
comment5.params=count
comment5.target=void\ decrementTotalCount(int)
comment5.text=\r\n\ Removes\ words\ from\ the\ total\ word\ count.\r\n\ @param\ count\ The\ amount\ of\ words\ to\ remove\ from\ the\ total.\r\n
comment6.params=
comment6.target=long\ getTotalTime()
comment6.text=\r\n\ Gets\ the\ total\ amount\ of\ time\ (in\ minutes)\ spent\ on\ this\ project.\r\n\ @return\ The\ total\ time\ (in\ minutes)\ spent\ on\ this\ project.\r\n
comment7.params=newTotal
comment7.target=void\ setTotalTime(long)
comment7.text=\r\n\ Sets\ the\ total\ amount\ of\ time\ (in\ minutes)\ spent\ on\ this\ project.\r\n\ @param\ newTotal\ The\ total\ amount\ of\ time\ (in\ minutes)\ spent\ on\ this\ project.\r\n
comment8.params=time
comment8.target=void\ incrementTotalTime(int)
comment8.text=\r\n\ Adds\ time\ to\ the\ total\ time\ spent\ on\ this\ project.\r\n\ @param\ time\ The\ time\ (in\ minutes)\ to\ add\ to\ the\ total.\r\n
comment9.params=time
comment9.target=void\ decrementTotalTime(int)
comment9.text=\r\n\ Removes\ time\ from\ the\ total\ time\ spent\ on\ this\ project.\r\n\ @param\ time\ The\ time\ (in\ minutes)\ to\ remove\ from\ the\ total.\r\n
numComments=34
